@startuml

package Datasource {
class AttendanceRecordRepositoryCSV {
-attendanceRecords : AttendanceRecords
+insert(AttendanceRecord)
+load()
+save()
}
}

package Domain {
class Year {
-year:int
+getYear()
}
class Month {
-month:int
+getMonth()
}
class Day {
-day:int
+getDay()
}
class WorkingDate {
-year : Year
-month : Month
-day : Day
getYearMonth()
getDate()
}


WorkingDate *-down- Year
WorkingDate *-down- Month
WorkingDate *-down- Day

class YearMonth {
-year :  Year
-month : Month
+YearMonth(Year,Month)
+getYearMonth() : YearMonth
}

YearMonth *-down= Year
YearMonth *-down- Month

class EntryTime {
-hour : Hour
-minute : Minute
+getHour() : Hour
+getMinutes() : Minute
}

class Hour {
-hour : int
+getHour
}

class Minute {
-minute : int
+getMinute()
}

EntryTime *-right- Hour
EntryTime *-right- Minute


AttendanceRecord *-down- EntryTime  : have 2 

class RegularWorkDurationRule {
-REGULAR_WORKING_HOURS : int
-REGULAR_WORKING_MINUTES : int
+calculateRegularWorkingHours()
+calculateOvertimeWorkingHours()
}

class FireConditionRule {
-MUST_ARRIVAL_TIME : int
+isEmployeeFired(AttendanceRecords) : bool
}

class WorkingDurationExceptBreak {
+calculateTotalWorkingHours()
}

enum BreakTimes {
LUNCH_BREAK_TIME,
EVENING_BREAK_TIME,
LATE_NIGHT_BREAK_TIME
}

WorkingDurationExceptBreak *-down- BreakTimes


class OverTimeRule {
-FinalCutHours : int
-FinalCutMinutes : int
-FinalCutTime : EntryTime
+adjustAttendanceRecord()
}

class AttendanceRecords {
-List<AttendanceRecord>
+AttendanceRecords(List<AttendanceRecord>)
+insert(AttendanceRecord)
+getAttendanceRecord() : List<AttendanceRecord>
}

class AttendanceRecord {
-workingDate : WorkingDate
-EntryTime : startTime
-EntryTime : endTime
+getWorkingDate() : WorkingDate
+getStartTime() : EntryTime 
+getEndTime() : EntryTime 
}

AttendanceRecords *-down- AttendanceRecord 

interface AttendanceRecordRepository {
-record: AttendanceRecords
+insert(AttendanceRecord)
+load()
+save()
}

class AttendanceSummaryCalculator {
+calculate() : Either<AttendanceSummaryFailed,AttendanceSummary>
}

class AttendanceSummary {
-regularWorkingDuration : RegularWorkingDuration
-overTimeWorkingDuration : OverTimeWorkingDuration
+get() : AttendanceSummary
+getRegularWorkingHours() : long
+getRegularWorkingMinutes() : long
}

Enum AttendanceSummaryFailed {
-FIRED
}

class RegularWorkingDuration {
-regularWorkingDuration : Duration
}
class OverTimeWorkingDuration {
-overTimeWorkingDuration : Duration
}

class TotalWorkingDuration {
+totalWorkingDuration : Duration
}

}
package API {
class AttendanceAdministrationMain
class CommandLineParser
}
package Service
{
class AttendanceRecordUpdateService {
+update(AttendanceRecord)
}
class AttendanceRecordSummaryService
{
+summary(YearMonth) : Either<AttendanceSummaryFailed,AttendanceSummary>
}

AttendanceRecordUpdateService -->  AttendanceRecordRepository 
AttendanceRecordSummaryService --> YearMonth 
AttendanceRecordSummaryService --> AttendanceRecordRepository
AttendanceRecordSummaryService --> AttendanceSummaryCalculator 
AttendanceSummaryCalculator --> FireConditionRule 
AttendanceSummaryCalculator --> AttendanceSummary
AttendanceSummaryCalculator --> AttendanceSummaryFailed


AttendanceRecordUpdateService --> OverTimeRule
AttendanceSummary --> WorkingDurationExceptBreak
WorkingDurationExceptBreak --> TotalWorkingDuration
AttendanceSummary --> RegularWorkingDuration
AttendanceSummary --> OverTimeWorkingDuration
RegularWorkingDuration --> RegularWorkDurationRule
OverTimeWorkingDuration --> RegularWorkDurationRule

AttendanceAdministrationMain --> CommandLineParser
AttendanceAdministrationMain --> AttendanceRecordUpdateService
AttendanceAdministrationMain --> AttendanceRecordSummaryService

AttendanceRecord *-- WorkingDate
AttendanceRecordRepositoryCSV  --> AttendanceRecords

AttendanceRecordRepository <|.. AttendanceRecordRepositoryCSV


@enduml

