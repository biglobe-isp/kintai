@startuml

package api {
    class Main {
        void main()
    }
}

package service {
    class AttendanceService <<Service>> {
        void registerAttendance(int workDay, int startTime, int endTime)
        Optional<MonthlySummary> aggregateMonthlyTotal(int workMonth)
    }
}

package datasource {
    class AttendanceRepositoryDb <<Datasource>> {
        void save(Attendance attendance)
        Optional<MonthlySummary> aggregate(YearMonth workMonth)
    }
}

package domain {
    class Attendance <<Entity>>{
        LocaleDate workDay
        LocaleTime startTime
        LocaleTime endTime
        --
        int breakTimeHour(WorkRegulations workRegulations)
        int overTimeHour(WorkRegulations workRegulations)
        int workingHour(WorkRegulations workRegulations)
    }

    class WorkRegulations <<Entity>> {
        LocaleTime minStartTime
        LocaleTime maxStartTime
        LocaleTime minEndTime
        LocaleTime maxEndTime
        ArrayList<TimeRange> breakTimes
        LocaleTime limitEndTime
        int standardWorkingHours
    }

    class TimeRange <<ValueObject>> {
        int from
        int to
    }

    class MonthlySummary <<ValueObject>> {
        YearMonth workMonth
        int workingHours
        int overTimeHours
    }

    class YearMonth <<ValueObject>> {
        int year
        int month
    }

    interface AttendanceRepository <<Repository>> {
        void save(Attendance attendance)
        Optional<MonthlySummary> aggregate(YearMonth workMonth)
    }
}

Main --> AttendanceService
AttendanceService --> AttendanceRepository
AttendanceRepository <|.. AttendanceRepositoryDb
WorkRegulations --> TimeRange
MonthlySummary --> YearMonth
Attendance --> WorkRegulations

@enduml