@startuml

package api {
    class Main {
        'パラメータのValidation
        'ServiceにわたすEntity, ValueObjectの生成
        void main()
    }
}

package service {
    class AttendanceService <<Service>> {
        '遅刻の場合はNG → 勤務時間の算出 → 登録
        void registerAttendance(LocaleDate workDay, AttendanceTime attendanceTime)
    }

    note as AttendanceServiceNote
        ※ オブジェクトの生成が依存してしまっている
        ※ テスト実装してみて必要であれば変更する

        ・WorkRegulations生成
        ・Attendance生成
    end note
    AttendanceServiceNote .. AttendanceService

    class MonthlySummaryService <<Service>> {
        '当月分のAttendance取得 → 集計処理呼び出し
        MonthlySummary acquireMonthlyTotal(YearMonth yearMonth)
    }
}

package datasource {
    class AttendanceRepositoryCsv <<Datasource>> {
        void save(Attendance attendance)
        List<Attendance> findSpecifiedYearMonth(YearMonth workMonth)
    }

    file csv {
    }

    class WorkRegulationsRepositoryData <<Datasource>> {
        WorkRegulations getCurrentRegulations()
    }
}

package domain {

    package attendance {
        class Attendance <<Entity>>{
            LocaleDate workDay
            --
            AttendanceTime attendanceTime
            WorkingHours workingHours
            OverTimeHours overTimeHours
        }

        class AttendanceTime <<ValueObject>> {
            StartTime startTime
            EndTime endTime
            --
            + AttendanceTime(StartTime startTime, EndTime endTime)
        }

        class StartTime <<ValueObject>> {
            LocalTime localTime
            --
            + StartTime(String startTime)
            + boolean isLateness(WorkRegulations workRegulations)
        }

        class EndTime <<ValueObject>> {
            LocalTime localTime
            --
            + EndTime(String endTime)
            + boolean isLeaveEarly(WorkRegulations workRegulations)
        }

        class OverTimeHours <<ValueObject>> {
            TimeUnit timeUnit;
            --
            + OverTimeHours(WorkingHours workingHours, WorkRegulations workRegulations)
        }

        class WorkingHours <<ValueObject>> {
            TimeUnit timeUnit
            --
            + WorkingHours(AttendanceTime attendanceTime, BreakTimeHours breakTimeHours, WorkRegulations workRegulations)
        }

        class BreakTimeHours <<ValueObject>> {
            TimeUnit timeUnit
            --
            + BreakTimeHours(AttendanceTime attendanceTime, WorkRegulations workRegulations)
        }
    }

    package workregulations {

        class WorkRegulations <<ValueObject>> {
            StartTimeRange startTimeRange
            EndTimeRange endTimeRange
            BreakTimes breakTimes
        }


        class StartTimeRange <<ValueObject>> {
            LocalTime standard
            TimeRange range
        }

        class EndTimeRange <<ValueObject>> {
            LocalTime standard
            TimeRange range
        }

        class BreakTimes <<ValueObject>> {
            TimeRange lunchBreakTime
            TimeRange eveningBreakTime
            TimeRange nightBreakTime
        }
    }

    package monthlysummary {
        class MonthlySummaryCalculator <<DomainService>> {
            MonthlySummary aggregateSpecifiedMonthAttendance(YearMonth yearMonth)
        }

        class MonthlySummary <<ValueObject>> {
            YearMonth workMonth
            int workingHours
            int overTimeHours
        }

        class YearMonth <<ValueObject>> {
            int year
            int month
        }
    }

    class TimeUnit <<ValueObject>> {
        int hour
        int minutes
    }

    class TimeRange <<ValueObject>> {
        LocalDate timeFrom
        LocalDate timeTo
        --
        int getRangeMinutes()
    }

    interface AttendanceRepository <<Repository>> {
        void save(Attendance attendance)
        List<Attendance> findSpecifiedYearMonth(YearMonth workMonth)
    }

    interface WorkRegulationsRepository <<Repository>> {
        WorkRegulations getCurrentRegulations()
    }
}


'***** 相関関係 *****
Main ---> service : registerAttendance or AcquireMonthlyTotal
AttendanceService -[hidden]- MonthlySummaryService

AttendanceService --> AttendanceRepository : save
AttendanceService --> WorkRegulationsRepository

MonthlySummaryService --> AttendanceRepository : 1.find
MonthlySummaryService --> MonthlySummaryCalculator : 2.aggregate
MonthlySummaryCalculator --> MonthlySummary

AttendanceRepository ---> Attendance
MonthlySummaryCalculator ---> Attendance
WorkRegulationsRepository ---> WorkRegulations

AttendanceRepositoryCsv --> csv

OverTimeHours ---> WorkRegulations
WorkingHours ---> WorkRegulations
BreakTimeHours ---> WorkRegulations
StartTime ---> WorkRegulations
EndTime ---> WorkRegulations

'実装
AttendanceRepository <|... AttendanceRepositoryCsv
WorkRegulationsRepository <|... WorkRegulationsRepositoryData

'集約
Attendance *-- AttendanceTime
AttendanceTime *-- StartTime
AttendanceTime *-- EndTime
Attendance *-- WorkingHours
Attendance *-- OverTimeHours

WorkRegulations *-- BreakTimes
WorkRegulations *-- StartTimeRange
WorkRegulations *-- EndTimeRange

WorkingHours *-- BreakTimeHours
MonthlySummary --> YearMonth

WorkRegulations -[hidden]- TimeUnit
WorkRegulations -[hidden]- TimeRange

@enduml