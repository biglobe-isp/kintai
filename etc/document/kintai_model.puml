@startuml

package api {
    class Main {
        'パラメータのValidation
        'ServiceにわたすEntity, ValueObjectの生成
        void main()
    }
}

package service {
    class AttendanceService <<Service>> {
        '遅刻の場合はNG → 勤務時間の算出 → 登録
        void registerAttendance(Attendance attendance)
    }

    class MonthlySummaryService <<Service>> {
        '当月分のAttendance取得 → 集計処理呼び出し
        MonthlySummary acquireMonthlyTotal(YearMonth yearMonth)
    }
}

package datasource {
    class AttendanceRepositoryCsv <<Datasource>> {
        void save(Attendance attendance)
        List<Attendance> findSpecifiedYearMonth(YearMonth workMonth)
    }

    file csv {
    }

    class WorkRegulationsRepositoryData <<Datasource>> {
        WorkRegulations getCurrentRegulations()
    }
}

package domain {

    package attendance {
        class AttendanceFactory {
            Attendance create()
            boolean isLateness(WorkRegulations workRegulations)
        }

        class Attendance <<Entity>>{
            WorkDay workDay
            --
            AttendanceTime attendanceTime
            TimeUnit workingHours
            TimeUnit overTimeHours
        }

        class WorkDay <<ValueObject>> {
            LocalDate date
        }

        class AttendanceTime <<ValueObject>> {
            StartTime startTime
            EndTime endTime
            --
            + AttendanceTime(StartTime startTime, EndTime endTime)
        }

        class StartTime <<ValueObject>> {
            LocalTime localTime
            --
            + StartTime(String startTime)
        }

        class EndTime <<ValueObject>> {
            LocalTime localTime
            --
            + EndTime(String endTime)
        }

        class BreakTimeHours <<ValueObject>> {
            TimeUnit timeUnit
            --
            + BreakTimeHours(AttendanceTime attendanceTime, WorkRegulations workRegulations)
        }

        class WorkingHoursCalculator {
            TimeUnit calc();
        }

        class OvertimeHoursCalculator {
            TimeUnit calc();
        }
    }

    package workregulations {

        class WorkRegulations <<ValueObject>> {
            StartTimeRange startTimeRange
            EndTimeRange endTimeRange
            BreakTimes breakTimes
        }

        class StartTimeRange <<ValueObject>> {
            LocalTime standard
            TimeRange range
        }

        class EndTimeRange <<ValueObject>> {
            LocalTime standard
            TimeRange range
        }

        class BreakTimes <<ValueObject>> {
            List<TimeRange> list
        }
    }

    package monthlysummary {
        class MonthlySummaryCalculator <<DomainService>> {
            MonthlySummary aggregateSpecifiedMonthAttendance(YearMonth yearMonth)
        }

        class MonthlySummary <<ValueObject>> {
            YearMonth workMonth
            int workingHours
            int overTimeHours
        }

        class YearMonth <<ValueObject>> {
            int year
            int month
        }
    }

    class TimePoint <<ValueObject>> {
        int hour
        int minutes
    }

    class TimeUnit <<ValueObject>> {
        int hour
        int minutes
    }

    class TimeRange <<ValueObject>> {
        LocalDate timeFrom
        LocalDate timeTo
        --
        int getRangeMinutes()
    }

    interface IAttendanceFactory {
        Attendance create()
    }

    interface IWorkingHoursCalculator {
        TimeUnit calc();
    }

    interface IOverTimeHoursCalculator {
        TimeUnit calc();
    }

    interface AttendanceRepository <<Repository>> {
        void save(Attendance attendance)
        List<Attendance> findSpecifiedYearMonth(YearMonth workMonth)
    }

    interface WorkRegulationsRepository <<Repository>> {
        WorkRegulations getCurrentRegulations()
    }
}


'***** 相関関係 *****
Main ---> service : registerAttendance or AcquireMonthlyTotal
Main ---> IAttendanceFactory
Main ---> WorkRegulationsRepository

AttendanceService -[hidden]- MonthlySummaryService

IAttendanceFactory --> IWorkingHoursCalculator
IAttendanceFactory --> IOverTimeHoursCalculator
AttendanceService --> AttendanceRepository : save

WorkingHoursCalculator --> BreakTimeHours

MonthlySummaryService --> AttendanceRepository : 1.find
MonthlySummaryService --> MonthlySummaryCalculator : 2.aggregate
MonthlySummaryCalculator --> MonthlySummary

AttendanceRepository ---> IAttendanceFactory
MonthlySummaryCalculator ---> IAttendanceFactory
AttendanceFactory ---> Attendance
WorkRegulationsRepository ---> WorkRegulations

AttendanceRepositoryCsv --> csv

BreakTimeHours ---> WorkRegulations
StartTime ---> WorkRegulations
EndTime ---> WorkRegulations

'実装
AttendanceRepository <|... AttendanceRepositoryCsv
WorkRegulationsRepository <|... WorkRegulationsRepositoryData
IAttendanceFactory <|... AttendanceFactory
IWorkingHoursCalculator <|... WorkingHoursCalculator
IOverTimeHoursCalculator <|... OvertimeHoursCalculator

'集約
Attendance *-- AttendanceTime
AttendanceTime *-- StartTime
AttendanceTime *-- EndTime
Attendance *-- WorkDay

WorkRegulations *-- BreakTimes
WorkRegulations *-- StartTimeRange
WorkRegulations *-- EndTimeRange

MonthlySummary --> YearMonth

WorkRegulations -[hidden]- TimeUnit
WorkRegulations -[hidden]- TimeRange

@enduml