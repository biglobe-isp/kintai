@startuml

'TODO:すべてのオブジェクトが関連するように
'TODO:依存関係の線はあってるのか？

package api {
    class Main {
        'パラメータのValidation
        'ServiceにわたすEntity, ValueObjectの生成
        void main()
    }
}

package service {
    class AttendanceService <<Service>> {
        '遅刻の場合はNG → 勤務時間の算出 → 登録
        void registerAttendance(Attendance attendance)
    }

    class MonthlySummaryService <<Service>> {
        '当月分の集計
        Optional<MonthlySummary> acquireMonthlyTotal(YearMonth yearMonth)
    }
}

package datasource {
    class AttendanceRepositoryDb <<Datasource>> {
        void save(Attendance attendance)
        Optional<Attendance> findSpecifiedYearMonth(YearMonth workMonth)
    }

    file csv {
    }
}

package domain {

    package Attendance {
        class Attendance <<Entity>>{
            LocaleDate workDay
            --
            StartTime startTime
            EndTime endTime
            WorkingHours workingHours
            OverTimeHours overTimeHours
        }

        class StartTime <<ValueObject>> {
            TimeUnit startTime
            --
            'TODO
            boolean isLateness(WorkRegulations workRegulations)
        }

        class EndTime <<ValueObject>> {
            TimeUnit endTime
            --
            'TODO
            boolean isLeaveEarly(WorkRegulations workRegulations)
        }

        class BreakTimeHours <<ValueObject>> {
            TimeUnit breakTimeHours
            --
            'TODO
            TimeUnit get(WorkRegulations workRegulations)
        }

        class OverTimeHours <<ValueObject>> {
            TimeUnit overTimeHours
            --
            'TODO
            TimeUnit get(WorkRegulations workRegulations)
        }

        class WorkingHours <<ValueObject>> {
            TimeUnit workingHours
            BreakTimeHours breakTimeHours
            --
            'TODO
            TimeUnit get(WorkRegulations workRegulations)
        }
    }

    package WorkRegulations {
        class EffectiveWorkRegulation <<DomainService>> {
            WorkRegulationsInformation getEffectiveWorkRegulations()
        }

        class WorkRegulations <<Entity>> {
            LocaleDate effectiveDateFrom
            LocaleTime effectiveDateTo
            WorkRegulationsInformation workRegulationsInformation
            --
            WorkRegulationsInformation getEffectiveWorkRegulations(Date systemDate)
        }

        class WorkRegulationsInformation <<ValueObject>> {
            StandardWorkingTime standardWorkingTime
            StartTime startTime
            EndTime endTime
            BreakTimes breakTimes
        }

        class StartTimeRange <<ValueObject>> {
            AllowanceTimeRange startTimeRange
        }

        class EndTimeRange <<ValueObject>> {
            AllowanceTimeRange endTimeRange
            LocaleTime maxLimitEndTime
        }

        class AllowanceTimeRange <<ValueObject>> {
            LocaleTime minTime
            LocaleTime maxTime
        }

        class BreakTimes <<ValueObject>> {
            TimeRange lunchBreakTime
            TimeRange eveningBreakTime
            TimeRange nightBreakTime
        }

        class StandardWorkingTime <<ValueObject>> {
            TimeRange standardWorkingTime
        }
    }

    package MonthlySummary {
        class MonthlySummaryCalculator <<DomainService>> {
            Optional<MonthlySummary>> aggregateSpecifiedMonthAttendance(YearMonth yearMonth)
        }

        class MonthlySummary <<ValueObject>> {
            YearMonth workMonth
            int workingHours
            int overTimeHours
        }

        class YearMonth <<ValueObject>> {
            int year
            int month
        }
    }

    class TimeUnit <<ValueObject>> {
        int hour
        int minutes
    }

    class TimeRange <<ValueObject>> {
        TimeUnit timeFrom
        TimeUnit timeTo
        --
        int getRange()
    }

    interface AttendanceRepository <<Repository>> {
        void save(Attendance attendance)
        Optional<Attendance> findSpecifiedYearMonth(YearMonth workMonth)
    }
}


'***** 相関関係 *****
Main ---> AttendanceService
Main ---> MonthlySummaryService

AttendanceService --> AttendanceRepository : save
AttendanceService -> EffectiveWorkRegulation : getEffectiveWorkRegulations

EffectiveWorkRegulation ---> WorkRegulations

MonthlySummaryService --> MonthlySummaryCalculator
MonthlySummaryCalculator -l-> AttendanceRepository : findSpecifiedYearMonth
MonthlySummaryCalculator --> MonthlySummary

AttendanceRepository ---> Attendance
MonthlySummaryCalculator ---> Attendance

AttendanceRepositoryDb --> csv

'依存
StartTime ...> WorkRegulationsInformation
EndTime ...> WorkRegulationsInformation
BreakTimeHours ...> WorkRegulationsInformation
OverTimeHours ...> WorkRegulationsInformation
WorkingHours ...> WorkRegulationsInformation

'実装
AttendanceRepository <|... AttendanceRepositoryDb

'集約
Attendance *-- StartTime
Attendance *-- EndTime
Attendance *-- WorkingHours
Attendance *-- OverTimeHours

WorkRegulations *-- WorkRegulationsInformation

WorkRegulationsInformation *-- StandardWorkingTime
WorkRegulationsInformation *-- BreakTimes
WorkRegulationsInformation *-- StartTimeRange
WorkRegulationsInformation *-- EndTimeRange

'コンポジション(has-a | 強い集約)
WorkingHours o-- BreakTimeHours
StartTimeRange o-- AllowanceTimeRange
EndTimeRange o-- AllowanceTimeRange
MonthlySummary o-- YearMonth

'TODO:複雑にみえるためいったんコメントアウト
'StartTime o-- TimeUnit
'EndTime o-- TimeUnit
'BreakTimeHours o-- TimeUnit
'OverTimeHours o-- TimeUnit
'
'WorkingHours o-- TimeUnit
'BreakTimes o-- TimeRange

'StandardWorkingTime o-- TimeRange
'TimeRange o-- TimeUnit


@enduml