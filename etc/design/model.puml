@startuml

package domain {
    package 打刻 {

        package 出勤情報 {
            class AttendanceDate {
                - ZonedDateTime date
            }
            class AttendanceTimeInterval {
                - TimeInterval timeInterval
                + TimeLength intersect(RegulatedBreakTimeInterval regulatedBreakTimeInterval)
                + TimeLength between(TimeUnits unit)
            } 
            class AttendanceTimeMinutes {
                - TimeLength length
                + AttendanceTimeMinutes(AttendanceTimeInterval attendanceTimeInterval)
                + TimeLength excludeBreakTime(\n    AttendanceTimeInterval attendanceTimeInterval, \n    RegulatedBreakTimeShift regulatedBreakTimeShift)
            }
            class AttendanceTimeIntervalDomainService {
                + AttendanceTimeInterval acceptOrFire(AttendanceDate attendanceDate, TimeInterval interval)
            }       
            class AttendanceRecord {
                - AttendanceDate attendanceDate
                - AttendanceTimeInterval attendanceTimeInterval
                - ActualMinutes actualMinutes
                + LocalDate getAttendanceLocalDate()
                + LocalTime getAttendanceStartLocalTime()
                + LocalDate getAttendanceEndLocalTime()
                + int getActualWorkingTimeMinutesLength()
                + int getActualOvertimeMinutesLength()
            }

            class AttendanceRecords {
                - List<AttendanceRecord> records
            }
            class AttendanceRecordDomainService {
                + AttendanceRecord createAttendanceRecord(\n    AttendanceTimeInterval attendanceTimeInterval, \n    RegulatedBreakTimeShift regulatedBreakTimeShift, \n    RegulatedWorkingTimeMinutes regulatedWorkingTimeMinutes)
            }
        }

        package 実績時間 {
            package 残業時間　{
                class ActualOvertimeMinutes {
                    - TimeLength length
                    + ActualOvertimeMinutes(\n    ActualWorkingTimeMinutes actualWorkingTimeMinutes, \n    RegulatedWorkingTimeMinutes regulatedWorkingTimeMinutes)
                    + int intValue()
                    - boolean hasOvertime()

                }
            }
            package 労働時間 {
                class ActualWorkingTimeMinutes {
                    - TimeLength length
                    + int intValue()
                }
            }
            class ActualMinutes {
                - ActualWorkingTimeMinutes actualWorkingTimeMinutes
                - ActualOvertimeMinutes actualOvertimeMinutes
                + int convertActualWorkingTimeMinutesToHour()
                + int convertActualOvertimeMinutesToHour()
                + int extractRemainderActualWorkingTimeMinutes()
                + int extractRemainderActualOvertimeMinutes()
            }
        }

        package 就業規則 {
            class RegulatedWorkingTimeMinutes {
                - TimeLength length
            }
            class RegulatedWorkingTimeInterval {
                - TimeInterval timeInterval
                + boolean hasFollowedRegulatedStartTime(StartTime startTime)
            }
            class RegulatedBreakTimeInterval {
                - TimeInterval timeInterval
                + TimeLength between(TimeUnits unit)
            }
            class RegulatedBreakTimeShift {
                - List<RegulatedBreakTimeInterval> breakTimeInterval
            }
        }
        class ZonedTimePoint {
            - ZonedDateTime time
            + boolean isEqual(ZonedTimePoint comparison) 
            + boolean isBefore(ZonedTimePoint comparison) 
            + boolean isAfter(ZonedTimePoint comparison) 
            + boolean isEqualOrBefore(ZonedTimePoint comparison) 
            + boolean isEqualOrAfter(ZonedTimePoint comparison) 
        }
        class StartTime {
            - ZonedTimePoint timePoint
        }
        class EndTime {
            - ZonedTimePoint timePoint
        }

        class TimeLength {
            - long length
            - TimeUnits unit
            + TimeLength add(TimeLength addition)
            + TimeLength subtract(TimeLength subtraction)
            + boolean isLonger(TimeLength comparison)
            + TimeLength minuteToHour()
            + TimeLength extractRemainderMinutes()
            - boolean isSameUnit(TimeLength comparison)
        }

        class TimeInterval {
            - StartTime
            - EndTime
            + ZonedTimePoint getStartTimePoint()
            + ZonedTimePoint getEndTimePoint()
            + int getStartHour()
            + int getStartMinute()
            +  TimeIntervalComparedStatus getComparedStatus(TimeInterval comparison)
            + TimeLength between(TimeInterval interval, TimeUnits unit)
            + {static} TimeLength between(StartTime startTime, EndTime endTime)
            - boolean contains(ZonedTimePoint timePoint)
            - boolean containsAll(TimeInterval interval)
            - boolean within(TimeInterval interval)
        }
        
        enum TimeUnits {
            MINUTES
            HOURS
        }
        enum TimeIntervalComparedStatus {
            WITHIN
            CONTAIN
            EQUAL_OR_BEFORE
            EQUAL_OR_AFTER
            OUT_OF
        }

        AttendanceRecords o--> AttendanceRecord
        AttendanceRecord --> AttendanceDate
        AttendanceRecord --> AttendanceTimeInterval
        AttendanceRecord --> ActualMinutes

        ActualMinutes *--> ActualOvertimeMinutes
        ActualMinutes *--> ActualWorkingTimeMinutes

        ActualOvertimeMinutes *--> TimeLength
        ActualOvertimeMinutes -down-> ActualWorkingTimeMinutes
        ActualOvertimeMinutes --> RegulatedWorkingTimeMinutes

        ActualWorkingTimeMinutes *--> TimeLength
        AttendanceRecordDomainService -up-> ActualOvertimeMinutes
        AttendanceRecordDomainService -up-> ActualWorkingTimeMinutes
        AttendanceRecordDomainService -left-> AttendanceDate
        AttendanceRecordDomainService -left-> AttendanceTimeInterval
        AttendanceRecordDomainService -left-> AttendanceTimeMinutes
        AttendanceRecordDomainService --> RegulatedBreakTimeShift
        AttendanceRecordDomainService --> RegulatedWorkingTimeMinutes

        AttendanceTimeMinutes *--> TimeLength
        AttendanceTimeMinutes -up-> AttendanceTimeInterval
        AttendanceTimeMinutes --> RegulatedBreakTimeShift
        AttendanceTimeInterval *--> TimeInterval
        AttendanceTimeIntervalDomainService -up-> AttendanceDate
        AttendanceTimeIntervalDomainService -up-> AttendanceTimeInterval
        AttendanceTimeIntervalDomainService --> RegulatedWorkingTimeInterval
        AttendanceTimeIntervalDomainService --> TimeInterval

        RegulatedWorkingTimeInterval *--> TimeInterval
        RegulatedBreakTimeInterval *--> TimeInterval
        RegulatedBreakTimeShift o--> RegulatedBreakTimeInterval
        RegulatedWorkingTimeMinutes *--> TimeLength

        TimeInterval *--> StartTime
        TimeInterval *--> EndTime

        StartTime *--> ZonedTimePoint
        EndTime *--> ZonedTimePoint

        TimeLength *--> TimeUnits

        TimeInterval --> ZonedTimePoint
        TimeInterval --> TimeIntervalComparedStatus
        TimeInterval --> TimeLength
        TimeInterval --> TimeUnits
    }

    ' package 月次集計 {
    '     class AttendanceMonthlySummary {
    '         - TimeLength totalWorkingTimeMinutesLength
    '         - TimeLength totalOvertimeMinutesLength
    '         + public AttendanceMonthlySummary(Optional<Integer> totalWorkingTimeMinutes, Optional<Integer> totalOvertimeMinutes)
    '         + int convertActualWorkingTimeMinutesToHour()
    '         + int convertActualOvertimeMinutesToHour()
    '         + int extractRemainderActualWorkingTimeMinutes()
    '         + int extractRemainderActualOvertimeMinutes()
    '     }
    '     class AggregationMonth {
    '         - YearMonth yearMonth
    '         + boolean equalsYearMonth(LocalDate date)
    '         - boolean equalsYear(LocalDate date)
    '         - boolean equalsMonth(LocalDate date)
    '     }
    ' }
}

' package controller {
'     class AttendanceController {
'         - AttendanceRecordingService attendanceRecordService
'         - AttendanceAggregationService attendanceAggregationService
'         - AttendanceTimeIntervalDomainService attendanceTimeIntervalDomainService
'         - AttendanceOutputFormatter attendanceOutputFormatter
'         - AttendanceMonthlySummaryOutputFormatter attendanceMonthlySummaryOutputFormatter
'         + void record(String ymd, String startTime, String endTime)
'         + void aggregateMonthly(String yearMonth)
'     }
'     AttendanceController *--> AttendanceRecordingService
'     AttendanceController *--> AttendanceAggregationService
'     AttendanceController *--> AttendanceTimeIntervalDomainService
'     AttendanceController *--> AttendanceOutputFormatter
'     AttendanceController *--> AttendanceMonthlySummaryOutputFormatter
' }

' package service {
'     class AttendanceRecordingService {
'         - AttendanceRepository attendanceRepository
'         - RegulationRepository regulationRepository
'         - AttendanceRecordDomainService attendanceRecordDomainService
'         + AttendanceRecord register(AttendanceDate attendanceDate, AttendanceTimeInterval attendanceTimeInterval)
'     }
'     class AttendanceAggregationService {
'         - AttendanceRepository attendanceRepository
'         + AttendanceMonthlySummary aggregateMonthly(AggregationMonth aggregationMonth)
'     }
'     interface AttendanceRepository {
'         + void register(AttendanceRecord attendanceRecord)
'         + AttendanceMonthlySummary fetchMonthly(AggregationMonth aggregationMonth)
'     }
'     interface RegulationRepository {
'         + fetchBreakTimeIntervalShift(AttendanceDate attendanceDate)
'         + RegulatedWorkingTimeMinutes fetchRegulatedWorkingTimeMinutes(AttendanceDate attendanceDate)
'     }
'     AttendanceRecordingService   *--> AttendanceRepository
'     AttendanceRecordingService   *--> RegulationRepository
'     AttendanceRecordingService   *--> AttendanceRecordDomainService
'     AttendanceAggregationService *--> AttendanceRepository
' }

' package datasource {
'     class AttendanceRepositoryCsv {
'         + void register(AttendanceRecord attendanceRecord)
'         + AttendanceRecords fetchMonthly(AggregationMonth aggregationMonth)
'     }
'     class RegulationRepositoryCsv {
'         + BreakTimeIntervalShift fetchBreakTimeList(AttendanceDate attendanceDate)
'         + RegulatedWorkingTimeMinutes fetchRegulatedWorkingTimeMinutes(AttendanceDate attendanceDate)
'     }
'     class AttendanceCsvDao {
'         - CsvDao<AttendanceRecordEntity> csvDao 
'         - AppCsvProperties appCsvProperties 
'         + void register(AttendanceRecordEntities records)
'         + AttendaceRecordEntities fetchMonthly(AggregationMonth aggregationMonth)
'     }
'     class RegulatedBreakTimeCsvDao {
'         - CsvDao<RegulatedBreakTimeEntity> csvDao 
'         - AppCsvProperties appCsvProperties 
'         + RegulatedBreakTimeEntities fetchAll()
'     }
'     class RegulatedWorkingTimeMinutesCsvDao {
'         - CsvDao<RegulatedWorkingTimeMinutesEntity> csvDao
'         - AppCsvProperties appCsvProperties 
'         + RegulatedWorkingTimeMinutesEntity fetch()
'     }
'     class CsvDao<T> {
'         + void writeAll(Writer writer, List<T> beans)
'         + List<T> read(Reader reader, Class<? extends T> type)
'     }
'     class AttendanceRecordEntities {
'         - List<AttendanceRecordEntity> records  
'         + void add(AttendanceRecord record)         
'     }
'     class AttendanceRecordEntity {
'         - LocalDate ymd
'         - LocalTime startDate
'         - LocalTime endDate
'         - int workingTimeMinutes
'         - int overtimeMinutes
'         - ZonedDateTime updatedAt
'         + AttendanceRecord toDomain()
'     }
'     class RegulatedBreakTimeEntities {
'         - List<RegulatedBreakTimeEntity> records    
'     }
'     class RegulatedBreakTimeEntity {
'         - LocalDate validStartDate
'         - LocalDate validEndDate
'         - LocalTime breakTimeStart
'         - LocalTime breakTimeEnd
'     }
'     class RegulatedWorkingTimeMinutesEntity {
'         - LocalDate validStartDate
'         - LocalDate validEndDate
'         - int regulatedWorkingTimeMinutes
'     }
'     AttendanceRepositoryCsv .up.|> AttendanceRepository
'     AttendanceRepositoryCsv --> AttendanceCsvDao
'     AttendanceRecordEntities o--> AttendanceRecordEntity
'     AttendanceCsvDao --> AttendanceRecordEntities
'     AttendanceCsvDao --> AttendanceRecordEntity
'     AttendanceCsvDao *--> CsvDao

'     RegulationRepositoryCsv .up.|> RegulationRepository
'     RegulationRepositoryCsv --> RegulatedBreakTimeCsvDao
'     RegulationRepositoryCsv --> RegulatedWorkingTimeMinutesCsvDao

'     RegulatedBreakTimeCsvDao --> RegulatedBreakTimeEntities
'     RegulatedBreakTimeCsvDao --> RegulatedBreakTimeEntity
'     RegulatedBreakTimeCsvDao *--> CsvDao
'     RegulatedBreakTimeEntities o--> RegulatedBreakTimeEntity

'     RegulatedWorkingTimeMinutesCsvDao --> RegulatedWorkingTimeMinutesEntity
'     RegulatedWorkingTimeMinutesCsvDao *--> CsvDao
' }

@enduml