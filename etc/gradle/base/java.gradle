/**
 * Javaのコンパイル＆テストの設定
 */

// 文字コードの設定
ext {
    defaultEncoding = 'UTF-8'
}

// 環境ごとにデフォルト文字コードが違うので、コンパイル時の文字コードを指定する
compileJava.options.encoding = defaultEncoding
compileGroovy.options.encoding = defaultEncoding
compileTestJava.options.encoding = defaultEncoding
compileTestGroovy.options.encoding = defaultEncoding

// Javaコードの中にGroovyのコードが混じるので、それに対応させる
sourceSets {
    main {
        java.srcDirs = []
        groovy.srcDirs = ['src/main/java']
        resources {
            srcDir 'src/main/java'
        }
        // TomcatがContextを自動リロードするために、クラスファイルの出力先を変更
        output.classesDir = 'src/main/webapp/WEB-INF/classes'
    }

    test {
        java.srcDirs = []
        groovy.srcDirs = ['src/test/groovy', 'src/test/java']
    }
}

// gradlew test コマンド実行時の処理の設定
test {
    // クラホスのJenkinsのみ実行
    addPropertiesIfCloudHosting()

    // テストする環境で使用する設定ファイルが異なる
    systemProperties 'environment': "${env}"

    // テスト失敗時の情報を標準より多く出力する設定
    testLogging.exceptionFormat = 'full'

    // GradleでEnclosedテストが2回実行されることの対策（そのうちGradle側で対応してくれるようになるかも）
    exclude '**/*$*'

}

// クラホスのJenkinsのみ実行
def addPropertiesIfCloudHosting() {
    if ("${env}" == 'cloudHosting') {
        // クラホスのみDBの接続情報は外から渡す
        def propertiesFile = new File('src/test/resources/properties/environment/cloudHosting.properties')
        propertiesFile.append("jdbc.url=jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=${host})(PORT=${port})))(CONNECT_DATA=(SERVICE_NAME=${service_name})))" + System.lineSeparator())
        propertiesFile.append("jdbc.schema=${schema}" + System.lineSeparator())
        propertiesFile.append("jdbc.username=${username}" + System.lineSeparator())
        propertiesFile.append("jdbc.password=${password}" + System.lineSeparator())
    }
}
